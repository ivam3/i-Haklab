#!/data/data/com.termux/files/usr/bin/bash
IFS=$'\n\t'
# INVOKE VARIABLES AND FUNCTIONS
source ${HOME}/.local/etc/i-Haklab/variables
source $iHETC/functions
fontsV="v2.3.3"
z=$(sleep 0.5)

# PREINST
[[ -e ${PREFIX}/etc/bashito ]] && { rm -rf ${PREFIX}/etc/bashito;}
[[ -e ${PREFIX}/etc/motd ]] && { rm -rf ${PREFIX}/etc/motd;}
[[ -e ${PREFIX}/etc/motd.dpkg-old ]] && { rm -rf ${PREFIX}/etc/motd.dpkg-old;}

# BACKUPING PREVIOUS SETTINGS
if [[ -e $HOME/.local/etc/i-Haklab/.Ivam3byCinderella ]]; then
  echo "Keeping previous password ..."
  [[ "Ivam3byCinderella" = $(cat $HOME/.local/etc/i-Haklab/.Ivam3byCinderella|openssl enc -aes-256-cbc -md sha512 -a -d -pbkdf2 -iter 100000 -salt -pass pass:Secret@123#) ]] || {
    cp ${HOME}/.local/etc/i-Haklab/.Ivam3byCinderella ${HOME}/.local/etc/i-Haklab/.IbyC;
  }
fi
if [[ -e ${HOME}/.local/libexec/i-Haklab.login ]]; then
  echo "Keeping previous settings ..."
  cp ${HOME}/.local/libexec/i-Haklab.login ${HOME}/.local/libexec/i-Haklab.login.backup
fi

# TOOLS STORAGE DIRECTORY (INTERNAL - EXTERNAL)
echo "Getting access to external storage.";$z
mkdir -p ${HOME}/go/bin
s2=$(df|grep "fuse"|grep -iv emulated|awk -F " " '{print $6}')
[[ -n $s2 ]] && [[ -w $s2 ]] && {
	[[ -d $s2/Android/data/com.termux/files/tools ]] && [[ -s $s2/Android/data/com.termux/files/tools ]] && {
		for tool in $(ls $s2/Android/data/com.termux/files/tools/)
		do
			mv $s2/Android/data/com.termux/files/tools/$tool ${HOME}/.local/share/;
		done
	}
}

echo "Installing required python modules (It could take a while) ...";$z
for module in pyyaml beautifulsoup4 betrufflehog wheel speedtest-cli frida pipenv shodan;do
	[[ $module = shodan ]] && { pip --no-color --quiet --no-cache-dir install shodan;}
	pip --no-color --quiet --no-cache-dir install $module 2>>$LOGFILE
done

#echo "Downloading default wordlists (It could take a long time)..."
[[ -d ${HOME}/.local/share/wordlist ]] || { mkdir -p ${HOME}/.local/share/wordlist;}
#wget --tries=20 --quiet https://www.scrapmaker.com/data/wordlists/dictionaries/rockyou.txt \
#  -O ${HOME}/.local/share/wordlist/rockyou.txt
echo "Setting website '4share'."
curl -fsSL $iHDB/.local/var/service/www/veno-file-manager/vfm/vfm-admin/assets/zipstream/phpzip/phpzip/tests/run%20functional%20tests.bat -o ${HOME}/.local/var/service/www/veno-file-manager/vfm/vfm-admin/assets/zipstream/phpzip/phpzip/tests/'run functional tests.bat'
curl -fsSL $iHDB/.local/var/service/www/veno-file-manager/vfm/vfm-admin/assets/zipstream/phpzip/phpzip/tests/run%20unit%20tests.bat -o ${HOME}/.local/var/service/www/veno-file-manager/vfm/vfm-admin/assets/zipstream/phpzip/phpzip/tests/'run unit tests.bat'
chmod 777 -R ${HOME}/.local/var/service/www/veno-file-manager/vfm/vfm-admin/assets/zipstream/phpzip/phpzip/tests

# SET OMF SHELL
echo "Setting interactive shell Oh-my-fish.";$z
#git config --global core.autocrlf
[[ -e ${HOME}/.local/share/omf ]] && rm -rf ${HOME}/.local/share/omf
[[ -e ${PREFIX}/etc/fish/config.fish ]] && rm ${PREFIX}/etc/fish/config.fish
[[ -e ${HOME}/.config/fish/conf.d/omf.fish ]] && rm ${HOME}/.config/fish/conf.d/omf.fish
[[ -e ${PREFIX}/bin/fish ]] && [[ ! -L ${HOME}/.termux/shell ]] && {
	ln -s ${PREFIX}/bin/fish $HOME/.termux/shell;
}
ln -s ${HOME}/.local/etc/fish/config.fish ${PREFIX}/etc/fish/config.fish
[[ $(grep 'fish' -oE ${PREFIX}/etc/bash.bashrc) ]] || {
	sed -i '12a chsh -s fish' ${PREFIX}/etc/bash.bashrc;
}
[[ -e ${HOME}/.bashrc ]] || { touch ${HOME}/.bashrc;}
cat <<- CONF > ${HOME}/.bashrc
echo -en "\e[33mWARNING:\e[0m You are out of i-Haklab | Some commands and tools could not be running.\n"
CONF
fish <(curl -fsSL "$iHDB/.local/etc/i-Haklab/get.oh-my.fish")
file=$(mktemp)
chmod 777 $file
cat <<- CONF > $file
#!/bin/env fish
omf install will
CONF
fish $file >/dev/null 2>>$LOGFILE
rm $file

## SETTING FONTS AS DejaVuSansMono
[[ -d ${PREFIX}/share/fonts/ ]] && {
  rm -rf ${PREFIX}/share/fonts/*
} || {
  mkdir -p ${PREFIX}/share/fonts
}
for i in ProFont Hack; do
   curl -fsSL https://github.com/ryanoasis/nerd-fonts/releases/download/$fontsV/$i.zip \
    -o ${PREFIX}/share/fonts/$i.zip
  if [[ -e ${PREFIX}/share/fonts/$i.zip ]]; then
    unzip -qo ${PREFIX}/share/fonts/$i.zip -d ${PREFIX}/share/fonts/
    rm -rf ${PREFIX}/share/fonts/$i.zip
  else
    echo -en "${R}E:$W Fonts ${i}.zip file is missing or unreacheble."
  fi
done

# SET ROOT USER IF DEVICE IS ROOTED
if chk-root;then
	echo "Rooted device detected, setting Root user ...";$z
	rm -rf ${HOME}/.config/fish/functions/sudo.fish
	ln -s ${PREFIX}/bin/applets/sudo ${PREFIX}/bin/sudo
	if [[ -e ${HOME}/.suroot/.bashrc ]]
	then
		[[ -O ${HOME}/.suroot/.bashrc ]] || sudo chown $USER:$USER -R ${HOME}/.suroot/
  else
		[[ -d ${HOME}/.suroot ]] || mkdir ${HOME}/.suroot
  fi
  cat <<- CONF > ${HOME}/.suroot/.bashrc
PS1=\"\[\e[33m\][!] \[\e[31m\]Press\[\e[32m\] Ctrl d\[\e[31m\] to log out\[\e[32m\] ➤ \[\e[m\]\""
export TERM=xterm-256color
export LD_LIBRARY_PATH=/data/data/com.termux/files/usr/lib
export PATH=$HOME/go/bin:/data/data/com.termux/files/usr/bin:/data/data/com.termux/files/usr/bin/applets:/system/xbin:/system/bin
HOME=/data/data/com.termux/files/home/.suroot
fish
#          i-Haklab by @Ivam3
CONF
fi

echo "Updating mlocate data base ..."
updatedb

# UPDATE NUN I-HAKLAB PACKAGES 
for i in $(grep ")" ${HOME}/.local/libexec/pkg2conf|grep -iv "("|tr "|" "\n"|tr -d ")"|sed "s|\t||"|tr -d " "); do
  [[ $i == "neovim" ]] && { i="nvim";}
  [[ $i == "tigervnc" ]] && { i="Xvnc";}
  [[ $i == "clamav" ]] && { i="clamdscan";}
  [[ $i == "proxychains-ng" ]] && { i="proxychains4";}
  [[ $i == "apache2" ]] && { i="apachectl";}
  ! command -v $i >/dev/null || { bash ${HOME}/.local/libexec/pkg2conf $i;}
done

# RESTORE PREVIOUS PASSWORD IF DEFAULT WAS CHANGED
if [[ -e ${HOME}/.local/etc/i-Haklab/.IbyC ]]; then
  echo "Restoring previous password."
	cat ${HOME}/.local/etc/i-Haklab/.IbyC > ${HOME}/.local/etc/i-Haklab/.Ivam3byCinderella
	rm -f ${HOME}/.local/etc/i-Haklab/.IbyC
fi
if [[ -e ${HOME}/.local/libexec/i-Haklab.login.backup ]]; then
  echo "Restoring previous settings"
	cat ${HOME}/.local/libexec/i-Haklab.login.backup > ${HOME}/.local/libexec/i-Haklab.login
	rm ${HOME}/.local/libexec/i-Haklab.login.backup
fi
echo -en "[updates]\n    ╰──➤ New commands added:\n    |\t\t• cmd\n    |\t\t• gitbrowsering\n    |\t\t• i-Haklab chatGPT\n    |\t\t• cinderella\n    ╰──➤ New features:\n\t\t• type into neovim 'alter', 'comma', 'n' \n\t\t  (alt + , + n) to use AI\n"
echo "[*] i-Haklab installation finished."
echo "[*] run 'i-Haklab help' for a guide."
echo "[*] Run 'fixer' to fix any posible issue."
echo "[!] For help going to https://t.me/Ivam3_Bot."
echo "[*] @Ivam3: thank you for use my package."
#echo -en "[!] Press\e[32m enter\e[0m to init"
####::: REPORT ISSUES AT https://t.me/Ivam3_Bot :::####
